#!/bin/bash

function _dot_alias_completion() {
    local CONFIG_FILE="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)/yml/dot.yml"
    local current_word="${COMP_WORDS[COMP_CWORD]}"
    local alias_path=".aliases"

    if [[ ! -f "$CONFIG_FILE" ]]; then
        echo "Configuration file not found at $CONFIG_FILE" >&2
        return
    fi

    # Build the current alias path based on the command-line input
    for (( i = 2; i < COMP_CWORD; i++ )); do
        if [[ "${COMP_WORDS[i]}" != "--alias" && "${COMP_WORDS[i]}" != -* ]]; then
            alias_path+=".${COMP_WORDS[i]//\//}"
        fi
    done 

    # Fetch possible completions based on the current alias path
    local subkeys=()
    local all_keys=$(yq eval "$alias_path | keys" "$CONFIG_FILE" | sed -e 's/- //' -e 's/ //g' -e 's/,//g')

    for key in $all_keys; do
        if [[ "$key" != "path" && "$key" != "action" && "$key" != "recursive" && "$key" != "depth" ]]; then
            subkeys+=("$key")
        fi
    done

    if [[ "$current_word" == */ && "${subkeys[@]}" =~ "${current_word//\//}" ]]; then
        local current_key="${current_word//\//}"
        local directory=$(yq eval "${alias_path}.${current_key}.path" "$CONFIG_FILE")
        if [[ -d "$directory" ]]; then
            mapfile -t files < <(ls "$directory")
            COMPREPLY=( $(compgen -W "${files[*]}") )
        else
            COMPREPLY=()
        fi
    else
        COMPREPLY=( $(compgen -W "${subkeys[*]}" -- "$current_word") )
    fi

    compopt -o nospace
}


function _dot_nav_completion(){
    local current_word="${COMP_WORDS[COMP_CWORD]}"
    local previous_word="${COMP_WORDS[COMP_CWORD-1]}"
    local IFS=$'\n'
    compopt -o nospace
    if [[ "$current_word" == */* ]]; then
        local dir="${current_word%/*}/"
        local prefix="${current_word##*/}"
    else
        local dir=""
        local prefix="$current_word"
    fi
    COMPREPLY=( $(compgen -f -- "$dir$prefix" | grep -v '^\.') )
    for i in "${!COMPREPLY[@]}"; do
        if [[ -d "${COMPREPLY[i]}" ]]; then
            COMPREPLY[i]+='/'
        fi
    done 
}

function _dot_completion() {
    local current_word="${COMP_WORDS[COMP_CWORD]}"
    local previous_word="${COMP_WORDS[COMP_CWORD-1]}"
    local options="nav home rc alias source exec preview rename mk mv del rm"

    if [[ "$previous_word" == "dot" ]]; then
        COMPREPLY=( $(compgen -W "${options}" -- "$current_word") )
    elif [[ "${COMP_WORDS[1]}" =~ alias ]]; then
        _dot_alias_completion
    elif [[ "${COMP_WORDS[1]}" =~ a ]]; then
        _dot_alias_completion
    elif [[ "${COMP_WORDS[1]}" == "nav" ]]; then
        _dot_nav_completion
    elif [[ "${COMP_WORDS[1]}" == "n" ]]; then
        _dot_nav_completion
    fi
}

complete -F _dot_completion dot
